# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:

trigger:
- main
appendCommitMessageToRunName: false

schedules:
  - cron: "10 * * * *"
    displayName: Cron Job Hourly
    branches:
      include:
        - main
    always: 'true'

pool:
  vmImage: ubuntu-latest

steps:
- task: Bash@3
  displayName: 'Check PGID URL status with www'
  inputs:
    targetType: 'inline'
    script: |
      #!/bin/bash
      DATENOW=`date +"%Y-%m-%d %T"`
      
      if curl -s --head  --request GET https://www.pocketgeekid.com | grep "200 OK" > /dev/null;
      then echo "The HTTP server on https://www.pocketgeekid.com is UP!" #> /dev/null
      
      else echo  "##vso[task.logissue type=error]The HTTP server on "https://www.pocketgeekid.com" was DOWN at $DATENOW"
      exit 1
      fi
     
- task: Bash@3
  condition: always()
  displayName: 'Check PGID URL status without www'
  inputs:
    targetType: 'inline'
    script: |
      #!/bin/bash
      DATENOW=`date +"%Y-%m-%d %T"`  
      if curl -s --head  --request GET https://pcketgeekid.com | grep "200 OK" > /dev/null;
      then echo "The HTTP server on https://pocketgeekid.com is UP!" #> /dev/null
        
      else echo  "##vso[task.logissue type=error]The HTTP server on "https://pocketgeekid.com" was DOWN at $DATENOW"
      exit 1
      fi

- task: Bash@3
  condition: always()
  displayName: 'Check PGP URL status with www'
  inputs:
    targetType: 'inline'
    script: |
      #!/bin/bash
      DATENOW=`date +"%Y-%m-%d %T"`  
      if curl -s --head  --request GET https://www.pcketgeekprivacy.com | grep "200 OK" > /dev/null;
      then echo "The HTTP server on https://www.pocketgeekprivacy.com is UP!" #> /dev/null
        
      else echo  "##vso[task.logissue type=error]The HTTP server on "https://pocketgeekprivacy.com" was DOWN at $DATENOW"
      exit 1
      fi

- task: Bash@3
  condition: always()
  displayName: 'Check PGP URL status without www'
  inputs:
    targetType: 'inline'
    script: |
      #!/bin/bash
      DATENOW=`date +"%Y-%m-%d %T"`  
      if curl -s -L --head  --request GET https://pocketgeekprivacy.com | grep "200 OK" > /dev/null;
      then echo "The HTTP server on https://pocketgeekprivacy.com is UP!" #> /dev/null
        
      else echo  "##vso[task.logissue type=error]The HTTP server on "https://pocketgeekprivacy.com" was DOWN at $DATENOW"
      exit 1
      fi